#!/usr/bin/env bash

# Restart Overmind process based on the directory where it's run
omr() {
  local git_branch_path=$(git rev-parse --show-toplevel 2>/dev/null)
  local branch=$(git rev-parse --abbrev-ref HEAD 2>/dev/null)

  # Check if we're in a git repository
  if [[ -z "$git_branch_path" || -z "$branch" ]]; then
    echo "Error: Not in a git repository" >&2
    return 1
  fi

  # Check if FIRST_ROOT_DIR is set and valid
  if [[ -z "$FIRST_ROOT_DIR" || ! -d "$FIRST_ROOT_DIR" ]]; then
    echo "Error: \$FIRST_ROOT_DIR ($FIRST_ROOT_DIR) is not a valid directory" >&2
    return 1
  fi

  # Detect process
  local detected_process
  if [[ -f "$git_branch_path/nuxt.config.ts" ]]; then
    detected_process="app"
  elif [[ -f "$git_branch_path/config/application.rb" ]]; then
    detected_process="rails"
  else
    detected_process=""
  fi

  # Use detected process or fall back to user input
  local process=${1:-$detected_process}
  [[ -z "$process" ]] && {
    echo "Error: Unable to detect process. Please specify: rails or app" >&2
    return 1
  }

  # Set up colors
  local GREEN=$(tput setaf 2)
  local BLUE=$(tput setaf 4)
  local MAGENTA=$(tput setaf 5)
  local BOLD=$(tput bold)
  local RESET=$(tput sgr0)

  # Print info
  echo "Issuing a ${MAGENTA}${BOLD}overmind restart $process${RESET} for:"
  echo -e "  ${BOLD}Branch:${RESET} ${GREEN}$branch${RESET}"
  echo -e "  ${BOLD}Path:${RESET}   ${BLUE}$git_branch_path${RESET}"

  # Perform the restart
  case "$process" in
  rails | worker)
    (cd "$FIRST_ROOT_DIR" && ln -sfn "$git_branch_path" "$FIRST_API_DIR" && overmind restart rails worker)
    ;;
  app)
    (cd "$FIRST_ROOT_DIR" && ln -sfn "$git_branch_path" "$FIRST_NUXT_DIR" && overmind restart app)
    ;;
  *)
    echo "Error: Unhandled process argument: $process" >&2
    return 1
    ;;
  esac
}

omr "$@"
